{"version":3,"sources":["state/actions.js","components/Login.js","components/Register.js","components/Footer.js","components/AdminUi/ModalEdit.js","components/UserUi/Vacation.js","components/Navbar.js","components/UserUi/UserInterface.js","components/AdminUi/AdminVac.js","components/AdminUi/Add.js","components/AdminUi/Graph.js","components/AdminUi/Admin.js","App.js","serviceWorker.js","state/vacationReducer.js","index.js"],"names":["LoginRequest","val","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","data","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","sent","json","type","stop","_x","apply","this","arguments","RegisterRequest","_ref3","_callee3","_context3","_x3","getVacations","_ref10","_callee10","_context10","_x10","Login","state","username","password","react_default","createElement","className","onChange","handleChange","bind","name","placeholder","props","msg","onClick","login","react_router_dom","to","id","ev","setState","defineProperty","target","value","loginRequest","alert","Component","connect","isLogged","role","Register","firstname","lastname","register","mandatory","registerRequest","history","push","socket","io","ModalEdit","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","modal","initialModalState","forModal","destination","startdate","enddate","price","details","_this2","on","editVacation","toggle","Modal","isOpen","ModalHeader","ModalBody","style","backgroundImage","concat","image","ModalFooter","Button","color","saveVacation","_ref8","_callee8","_context8","_x8","modalEdit","Vacation","buttonClick","dispatchVacaion","v","deleteVacation","AdminUi_ModalEdit","followers","follow","prevState","_ref7","_callee7","_context7","_x7","Unfollow","_ref6","_callee6","_context6","_x6","_ref4","_callee4","_context4","_x4","vacation","Navbar","toggleNavbar","assertThisInitialized","collapsed","classOne","classTwo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","logoutBtn","class","href","logOut","navbar","_ref2","_callee2","_context2","_x2","UserInterface","favorite","loadVacations","Fragment","components_Navbar","vacations","map","UserUi_Vacation","key","userInterface","AdminVac","adminVac","Add","add","_this3","file","files","reader","FileReader","readAsDataURL","onload","console","log","result","addVacation","_ref5","_callee5","_context5","_x5","Chart","require","Graph","createChart","vacationfollowers","filter","labelsArry","i","length","ctx","document","getElementById","getContext","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","xAxes","stacked","yAxes","graph","Admin","react_router","exact","path","component","admin","library","faCheck","faIgloo","faPaperPlane","faCheckCircle","App","UserUi_UserInterface","AdminUi_Admin","react_fontawesome_index_es","icon","app","Boolean","window","location","hostname","match","initialState","vacationReducer","undefined","action","newState","assign","allVacations","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dde3b4f5.chunk.js","sourcesContent":["export const LoginRequest = (val) => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/signin', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(val)\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"LOGIN\",\n            data: data\n        })\n    }\n}\n\nexport const LogOut = () => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/logout')\n        let data = await res.json();\n        dispatch({\n            type: \"LOGOUT\",\n            data: data\n        })\n    };\n}\n\nexport const RegisterRequest = (val) => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/register', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(val)\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"REGISTER\",\n            data: data\n        })\n    }\n}\n\nexport const DeletePost = (val) => {\n    return async (dispatch) => {\n        let res = await fetch(`http://localhost:3000/delete?id=+${val}`)\n        let data = await res.json();\n        dispatch({\n            type: \"DELETE\",\n            data: data\n        })\n    }\n}\n\nexport const AddVacation = (val) => {\n    debugger\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/addvacation', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(val)\n        });\n        debugger;\n        let data = await res.json();\n        debugger;\n        dispatch({\n            type: \"ADD\",\n            data: data\n        })\n    }\n}\n\nexport const Followers = (val) => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/follow', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ val })\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"FOLLOW\",\n            data: data\n        })\n    }\n}\n\nexport const Unfollow = (val) => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/unfollow', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ val })\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"UNFOLLOW\",\n            data: data\n        })\n    }\n}\n\nexport const EditVacation = (val) => {\n    return async (dispatch) => {\n        let res = await fetch(`http://localhost:3000/edit`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(val)\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"EDIT\",\n            data: data\n        })\n    }\n}\n\nexport const ChartGraph = (createChart = null) => {\n    return async function (dispatch) {\n        let res = await fetch('http://localhost:3000/login', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        });\n        let data = await res.json();\n        dispatch({\n            type: \"CHART\",\n            data: data\n        });\n\n        if (createChart != null) {\n            createChart();\n        }\n    };\n}\n\nexport const getVacations = () => {\n    return async (dispatch) => {\n        let res = await fetch('http://localhost:3000/vacations');\n        let data = await res.json();\n        dispatch({\n            type: \"VACATIONS_CHANGE\",\n            data: data\n        }) \n  };\n}\n\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { connect } from \"react-redux\";\r\nimport { LoginRequest } from '../state/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"formdesign\">\r\n            <h2>Login</h2>\r\n\r\n            <br/>\r\n              <input  onChange={this.handleChange.bind(this)} name=\"username\" type=\"text\" placeholder=\"Username\"  />\r\n           \r\n            <br/>\r\n           \r\n              <input onChange={this.handleChange.bind(this)} name=\"password\" type=\"text\" placeholder=\"password\"  />\r\n          \r\n              <br/>\r\n            {this.props.msg}\r\n          \r\n              <button className=\"btn \" onClick={this.login.bind(this)}>Login</button>\r\n             <br/>\r\n             <br/>\r\n             <br/>\r\n             \r\n              \r\n              <Link to=\"/Register\" id=\"linkB\" > Don't have an account? Sign up!</Link>\r\n            \r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n  handleChange(ev) {\r\n    this.setState({ [ev.target.name]: ev.target.value })\r\n  }\r\n\r\n  async login() {\r\n    if (!this.state.username) {\r\n      alert('Username required!');\r\n    }\r\n    else if (!this.state.password) {\r\n      alert('password required!');\r\n    }\r\n    else {\r\n      this.props.loginRequest(LoginRequest(this.state));\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return { isLogged: state.isLogged, role: state.role, msg: state.msg };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loginRequest: function (data) {\r\n      return dispatch(data);\r\n    }\r\n  }\r\n}\r\nconst login = connect(mapStateToProps, mapDispatchToProps)(Login)\r\n\r\nexport default login;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n import '../App.css';\r\nimport Login from './Login';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { RegisterRequest } from '../state/actions'\r\n\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    firstname: '',\r\n    lastname: '',\r\n    username: '',\r\n    password: ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"formdesign\">\r\n        <br></br>\r\n        <h2>Register</h2>\r\n        <br />\r\n        <div className=\"form\">\r\n\r\n          <input onChange={this.handleChange.bind(this)} name=\"firstname\" type=\"text\" placeholder=\"First Name\" />\r\n          <br />\r\n\r\n          <input onChange={this.handleChange.bind(this)} name=\"lastname\" type=\"text\" placeholder=\"Last Name\" />\r\n          <br />\r\n\r\n          <input onChange={this.handleChange.bind(this)} name=\"username\" type=\"text\" placeholder=\"Username\" />\r\n\r\n          <br />\r\n\r\n          <input onChange={this.handleChange.bind(this)} name=\"password\" type=\"text\" placeholder=\"Password\" />\r\n          <br />\r\n \r\n          <button className=\"btn \" onClick={this.register.bind(this)}>Register!</button>\r\n          <br />\r\n\r\n          <br />\r\n          <Link to=\"/login\" id=\"linkC\">Already have an account? Sign in</Link>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  handleChange(ev) {\r\n    this.setState({ [ev.target.name]: ev.target.value })\r\n  }\r\n\r\n  async register() {\r\n    let mandatory = this.state;\r\n    if (mandatory.firstname === '') {\r\n      alert('First Name required!')\r\n    }\r\n    else if (mandatory.lastname === '') {\r\n      alert('Last Name required!')\r\n    }\r\n    else if (mandatory.username === '') {\r\n      alert('Username required!')\r\n    }\r\n    else if (mandatory.password === '') {\r\n      alert('Password required!')\r\n    }\r\n    else {\r\n      this.props.registerRequest(RegisterRequest(this.state));\r\n      alert('Register Successful');\r\n      this.props.history.push(\"/login\");\r\n\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { msg: state.msg };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    registerRequest: function (data) {\r\n      return dispatch(data);\r\n    }\r\n  }\r\n}\r\n\r\nconst register = connect(mapStateToProps, mapDispatchToProps)(Register)\r\nexport default register;\r\n","import React, { Component } from 'react';\n\n\n\nclass Footer extends Component {\n  render() {\n    return (\n        <footer className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row\">\n             \n                \n                        &copy; {new Date().getFullYear()}{\" \"}\n          \n            </div>\n        </div>\n    </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { EditVacation, getVacations } from '../../state/actions'\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport io from 'socket.io-client';\nimport Footer from '../Footer';\nimport '../../App.css';\nconst socket = io('http://localhost:8888');\n\nclass ModalEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: props.initialModalState,\n      id: this.props.forModal.id,\n      destination: '',\n      startdate: '',\n      enddate: '',\n      price: '',\n      details: ''\n    };\n  }\n\n  componentDidMount() {\n    socket.on('vacationsChange', (msg) => {\n      this.props.editVacation(getVacations());\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"modalEdit\">\n        <span className=\"fa fa-edit top-right\" onClick={this.toggle.bind(this)}>Edit</span>\n        <Modal isOpen={this.state.modal} toggle={this.toggle.bind(this)} className={this.props.className}>\n          <ModalHeader toggle={this.toggle.bind(this)}>Edit This Vacation</ModalHeader>\n          <ModalBody>\n            <div className=\"vacations\">\n              <div className=\"card card-image\" style={{ backgroundImage: `url(${this.props.forModal.image})` }}>\n                <div className=\"overlay\">\n                  <div className=\"col-3 text-white pt-3 pb-3 px-4\">\n                    <div >\n                    Destination:<input onChange={this.handleChange.bind(this)} name=\"destination\"  placeholder={this.props.forModal.destination} />\n                    Start Date:<input onChange={this.handleChange.bind(this)} name=\"startdate\" placeholder={this.props.forModal.startdate} />\n                      <br />End Date:<input className=\"text-center\" onChange={this.handleChange.bind(this)} name=\"enddate\" placeholder={this.props.forModal.enddate} />\n                      Details:<input  onChange={this.handleChange.bind(this)} name=\"details\" placeholder={this.props.forModal.details} />\n                      Price:<input  onChange={this.handleChange.bind(this)} name=\"price\" type=\"number\" placeholder={this.props.forModal.price} /><i className=\"fa fa-usd\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div >\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.saveVacation.bind(this)}>Save</Button>{' '}\n            <Button color=\"secondary\" onClick={this.toggle.bind(this)}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  handleChange(ev) {\n    this.setState({ [ev.target.name]: ev.target.value })\n  }\n\n  saveVacation() {\n    this.props.editVacation(EditVacation(this.state))\n    this.toggle();\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editVacation: (data) => {\n      dispatch(data);\n    }\n  }\n}\n\nconst modalEdit = connect(null, mapDispatchToProps)(ModalEdit)\nexport default modalEdit;\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { DeletePost, Followers, Unfollow, getVacations } from '../../state/actions';\nimport ModalEdit from '../AdminUi/ModalEdit';\nimport io from 'socket.io-client';\nimport '../../App.css';\n\nconst socket = io('http://localhost:8888');\n\n\nclass Vacation extends Component {\n\n    state = {\n        buttonClick: false\n    }\n    componentDidMount() {\n        debugger;\n        socket.on('vacationsChange', (msg) => {\n            this.props.dispatchVacaion(getVacations());\n        })\n    }\n    render() {\n        if (this.props.role === \"Admin\") {\n            return (\n                <div className=\"vacations\">\n                    <div className=\"card card-image\" style={{ backgroundImage: `url(${this.props.v.image})` }}>\n                        <div className=\"overlay\">\n                            <div>\n                                <span className=\"fa fa-times top-right\" onClick={this.deleteVacation.bind(this)}></span><br />\n                                <ModalEdit forModal={this.props.v} />\n                            </div>\n                            <div className=\"text-white pt-3 pb-3 px-4\">\n                                <div>\n                                    <h3 className=\"card-title pt-1 text-center\"><strong>{this.props.v.destination}</strong></h3>\n                                    <p className=\"text-center\">{this.props.v.startdate}\n                                        <br />\n                                        {this.props.v.enddate}</p>\n                                    <p className=\"text-left\">{this.props.v.details}</p>\n                                    <p className=\"price text-center\">{this.props.v.price}<i className=\"fa fa-usd\"></i></p>\n                                    <p>{this.props.v.followers} <i className=\"fa fa-eye\"></i></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            )\n        }\n\n        else {\n            return (\n                <div className=\"vacations\">\n                    <div className=\"card card-image\" style={{ backgroundImage: `url(${this.props.v.image})` }}>\n                        <div className=\"overlay\">\n                            <div className=\"text-white pt-3 pb-3 px-4\">\n                                <h3 className=\"card-title pt-1 text-center\"><strong>{this.props.v.destination}</strong></h3>\n                                <p className=\"text-center\">{this.props.v.startdate}\n                                    <br />{this.props.v.enddate}</p>\n                                <p className=\"text-left\">{this.props.v.details}</p>\n                                <p className=\"price text-center\">{this.props.v.price}<i className=\"fa fa-usd\"></i></p>\n                                <button className=\"btn\" id=\"followBtn\" onClick={this.follow.bind(this)}>{this.state.buttonClick ? 'Unfollow' : 'Follow'}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            );\n        }\n    }\n\n    follow() {\n        this.setState(function (prevState) {\n            return { buttonClick: !prevState.buttonClick };\n        });\n\n        if (!this.state.buttonClick) {\n            this.props.dispatchVacaion(Followers(this.props.v.id));\n        }\n        else {\n            this.props.dispatchVacaion(Unfollow(this.props.v.id));\n        }\n    }\n\n    deleteVacation() {\n        this.props.dispatchVacaion(DeletePost(this.props.v.id));\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { msg: state.msg };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchVacaion: (data) => {\n            dispatch(data);\n        }\n    }\n}\n\nconst vacation = connect(mapStateToProps, mapDispatchToProps)(Vacation);\nexport default vacation;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { LogOut } from '../state/actions'\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true,\n        };\n    }\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    render() {\n        const collapsed = this.state.collapsed;\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n        if (this.props.role === \"Admin\") {\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-light\">\n                    <div className=\"container\">\n                        <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <span id=\"name\" >Hello {this.props.name}</span>\n                        <div className={`${classOne}`} id=\"navbarResponsive\">\n                           \n                                <li className=\"nav-item\">\n                                    <Link to=\"/\" className=\"nav-link\">Vacations</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/add\" className=\"nav-link\">Add New Vacation</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/graph\" className=\"nav-link\">Reports</Link>\n                                </li>\n                                <Link>\n                                    <span className=\"nav-link3\" onClick={this.logoutBtn.bind(this)}><i className=\"fa fa-power-off\"></i> Logout</span></Link>\n                              \n                           \n                        </div>\n                    </div>\n                </nav>\n            )\n        }\n        else {\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top\">\n                    <div className=\"container\">\n                    <span class=\"navbar-brand\" href=\"#\">Hello {this.props.name}</span>\n                        <ul className=\"navbar-nav mr-auto smooth-scroll\">\n                           \n                            <li className=\"nav-item\">\n                                <Link><span className=\"nav-link\" onClick={this.logoutBtn.bind(this)}><i className=\"fa fa-power-off\"></i> Logout</span></Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            );\n        }\n    }\n\n    logoutBtn() {\n        this.props.logOut();\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLogged: state.isLogged,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logOut: () => {\n            dispatch(LogOut());\n        }\n    }\n}\n\nconst navbar = connect(mapStateToProps, mapDispatchToProps)(Navbar);\nexport default navbar;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Footer from '../Footer';\nimport Vacation from './Vacation'\nimport Navbar from '../Navbar';\nimport io from 'socket.io-client';\nimport '../../App.css';\nimport { getVacations } from '../../state/actions';\nconst socket = io('http://localhost:8888');\n\n\n\n\nclass UserInterface extends Component {\n    state = {\n        followers: '',\n        favorite: []\n    }\ncomponentDidMount(){\nsocket.on('vacationsChange', (msg)=> {\n    this.props.loadVacations(getVacations());\n})\n}\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar  name={this.props.firstname} role={this.props.role}/>\n                <div className=\"UserInterface\">\n                    <div className=\"col-xl-8 col-lg-11 col-md-11 col-sm-1 mx-auto mt-lg-5\">\n                        <div className=\"container text-center\">\n                       \n                        </div>\n                        {this.props.vacations.map(v => <Vacation key={v.id} v={v} />)}\n                    </div>\n                </div>\n               \n            </React.Fragment>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return { vacations: state.vacations, firstname: state.firstname, role: state.role };\n    \n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadVacations: (data) => {\n            return dispatch(data);\n        }\n    }\n};\n\nconst userInterface = connect(mapStateToProps, mapDispatchToProps)(UserInterface);\nexport default userInterface;\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Vacation from '../UserUi/Vacation';\r\nimport '../../App.css';\r\nclass AdminVac extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.vacations.map(v => <Vacation key={v.id} v={v} role={this.props.role} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { vacations: state.vacations, role: state.role };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadVacations: () => {\r\n            return dispatch();\r\n        }\r\n    }\r\n};\r\n\r\nconst adminVac = connect(mapStateToProps, mapDispatchToProps)(AdminVac);\r\nexport default adminVac;\r\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { AddVacation, getVacations } from '../../state/actions';\nimport io from 'socket.io-client';\nimport '../../App.css';\nimport Footer from '../Footer';\nconst socket = io('http://localhost:8888');\n\nclass Add extends Component {\n    state = {\n        details: '',\n        destination: '',\n        image: '',\n        startdate: '',\n        enddate: '',\n        price: ''\n    }\n\n    componentDidMount() {\n        socket.on('vacationChange', (msg) => {\n            this.props.loadVacations(getVacations());\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Add\">\n              \n                    <input onChange={this.handleChange.bind(this)} name=\"details\" placeholder=\"Description\"  />\n           <br/>\n                    <input onChange={this.handleChange.bind(this)} name=\"destination\" placeholder=\"destination\"/>\n                    <br/>\n                    <input type=\"file\" onChange={this.handleChange.bind(this)} name=\"image\" />\n                    <br/>\n              \n                    <input onChange={this.handleChange.bind(this)} name=\"startdate\" type=\"date\"  />\n               \n             \n                    <input onChange={this.handleChange.bind(this)} name=\"enddate\" type=\"date\"  />\n              \n               \n                   <input onChange={this.handleChange.bind(this)} name=\"price\" type=\"number\" placeholder=\"Price in USD\"  />\n                   <br/>\n                    <button className=\"btn \" onClick={this.add.bind(this)}>Add Vacation</button>\n\n                \n            </div>\n        );\n    }\n    handleChange(ev) {\n        if (ev.target.name == \"image\") {\n            let file = ev.target.files[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                console.log(reader.result);\n                this.setState({ image: reader.result });\n            }\n        }\n        this.setState({ [ev.target.name]: ev.target.value })\n    }\n\n    add() {\n        this.props.addVacation(this.state);\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addVacation: (state) => {\n            return dispatch(AddVacation(state));\n        }\n    };\n};\n\nconst add = connect(null, mapDispatchToProps)(Add)\n\nexport default add;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport '../../App.css';\nimport { getVacations } from '../../state/actions';\nvar Chart = require('chart.js');\nconst socket = io('http://localhost:8888');\n\nclass Graph extends Component {\n\n    componentDidMount() {\n        this.createChart();\n        socket.on('vacationsChange', (msg)=> {\n            this.props.loadVacations(getVacations());\n        })\n    }\n\n    createChart() {\n        let vacationfollowers = this.props.vacations.filter(v => v.followers !== 0);\n        let labelsArry = [];\n        let followers = [];\n        for (let i = 0; i < vacationfollowers.length; i++) {\n            labelsArry.push(`${vacationfollowers[i].destination}`);\n            followers.push(vacationfollowers[i].followers);\n        }\n        var ctx = document.getElementById('myChart').getContext('2d');\n        new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: labelsArry,\n                datasets: [{\n                    label: 'Followers',\n                    data: followers,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.6)',\n                        'rgba(54, 162, 235, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(75, 192, 192, 0.6)',\n                        'rgba(153, 102, 255, 0.6)',\n                        'rgba(255, 159, 64, 0.6)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    xAxes: [{\n                        stacked: true\n                    }],\n                    yAxes: [{\n                        stacked: true\n                    }]\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <canvas id=\"myChart\"></canvas>\n            </React.Fragment>\n        );\n    }\n}\n\nlet mapStateToProps = function (state) {\n    return { vacations: state.vacations };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadVacations: (data) => {\n            return dispatch(data);\n        }\n    }\n};\n\n\n\nconst graph = connect(mapStateToProps, mapDispatchToProps)(Graph);\n\nexport default graph;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport Navbar from '../Navbar';\nimport '../../App.css';\nimport AdminVac from '../AdminUi/AdminVac';\nimport Add from './Add';\nimport Graph from './Graph';\n\n\n\n\nclass Admin extends Component {\n\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar id=\"name\" name={this.props.firstname} role={this.props.role} />\n            \n            <div className=\"admin\">\n              <div className=\"col-xl-8 col-lg-11 col-md-11 col-sm-1 mx-auto mt-lg-5\">\n                <div className=\"container text-center\">\n                \n                </div>\n\n                <Route exact path=\"/\" component={AdminVac} />\n                <Route path=\"/add\" component={Add} />\n                <Route path=\"/graph\" component={Graph} />\n              </div>\n            </div>\n           \n          </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return { vacations: state.vacations, firstname: state.firstname, role: state.role };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadVacations: () => {\n            return dispatch();\n        }\n    }\n};\n\nconst admin = connect(mapStateToProps, mapDispatchToProps)(Admin);\nexport default admin;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport { LoginRequest } from './state/actions';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faIgloo, faPaperPlane,faCheckCircle ,faCheck, } from '@fortawesome/free-solid-svg-icons'\n\nimport UserInterface from './components/UserUi/UserInterface';\nimport Admin from './components/AdminUi/Admin';\n\nlibrary.add(faCheck)\nlibrary.add(faIgloo)\nlibrary.add(faPaperPlane)\nlibrary.add(faCheckCircle );\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.dispatch(LoginRequest());\n  }\n\n  render() {\n    if (this.props.isLogged === true && this.props.role === \"User\") {\n      return (\n        <React.Fragment>\n          <UserInterface />\n        </React.Fragment>\n      )\n    }\n    if (this.props.isLogged === true && this.props.role === \"Admin\") {\n      return (\n        <React.Fragment>\n          <Admin />\n        </React.Fragment>\n      )\n    }\n    else {\n      return (\n   \n\n       <Router>         <div className=\"App\">\n\n         <h1 >Vacation Follower  <FontAwesomeIcon id=\"paper\" icon=\"paper-plane\" /></h1>\n        \n        \n     \n\n         <Route exact path=\"/\" component={Register} />\n         \n         <Route exact path=\"/register\" component={Register} />\n         <Route exact path=\"/login\" component={Login} />\n        \n        \n     \n       \n       </div>\n      </Router>\n\n);\n}\n}\n}\n\nconst mapStateToProps = (state) => {\nreturn { isLogged: state.isLogged, role: state.role, msg: state.msg };\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\nlet obj = {\ndispatch: (data) => {\n  dispatch(data);\n}\n}\nreturn obj;\n}\n\nconst app = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    vacations: [],\n    isLogged: false,\n    username: '',\n    firstname: '',\n    role: '',\n    msg: ''\n\n};\n\nconst vacationReducer = (state = initialState, action) => {\n    let newState = {};\n    switch (action.type) {\n        case \"LOGIN\":\n            newState = Object.assign({}, state);\n            newState.vacations = action.data.allVacations;\n            newState.isLogged = action.data.isLogged;\n            newState.username = action.data.username;\n            newState.firstname = action.data.firstname;\n            newState.role = action.data.role;\n            newState.msg = action.data.msg;\n            return newState;\n\n        case \"LOGOUT\":\n            newState = Object.assign({}, state);\n            newState.isLogged = false;\n            return newState;\n\n        case \"REGISTER\":\n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg;\n            return newState;\n\n        case \"ADD\":\n        \n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg; \n            newState.vacations = action.data.allVacations;\n            \n            return newState;\n\n        case \"EDIT\":\n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg;\n            newState.vacations = action.data.allVacations;\n            return newState;\n\n        case \"DELETE\":\n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg;\n            newState.vacations = action.data.allVacations;\n            return newState;\n\n        case \"FOLLOW\":\n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg;\n            newState.vacations = action.data.allVacations;\n\n            return newState;\n\n        case \"UNFOLLOW\":\n            newState = Object.assign({}, state);\n            newState.msg = action.data.msg;\n            newState.vacations = action.data.allVacations;\n            return newState;\n\n        case \"CHART\":\n            newState = Object.assign({}, state);\n            newState.vacations = action.data.allVacations;\n            return newState;\n\n        case \"VACATIONS_CHANGE\":\n        debugger;\n            newState = Object.assign({}, state);\n            newState.vacations = action.data;\n            return newState;\n\n        default:\n            return state;\n    }\n};\nexport default vacationReducer;   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from \"react-redux\";\n\nimport { createStore, applyMiddleware } from 'redux';\nimport vacationReducer from '../src/state/vacationReducer';\nimport thunk from 'redux-thunk';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nconst store = createStore(vacationReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n     <BrowserRouter>\n     <App />\n     </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}